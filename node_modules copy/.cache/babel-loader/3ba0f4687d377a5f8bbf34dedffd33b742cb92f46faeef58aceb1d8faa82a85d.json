{"ast":null,"code":"var _jsxFileName = \"/Users/ammu/Desktop/bootcamp-f23-amrithapramod/exer6/marta-interface-2/src/components/TrainList.js\";\nimport React, { useState } from 'react';\nimport Train from '../components/Train';\nimport \"./TrainList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TrainList(props) {\n  const {\n    data,\n    color,\n    station,\n    isArr,\n    isSched,\n    isBound1,\n    isBound2\n  } = props;\n  const filtered = data.filter(train => {\n    const currColor = train.LINE === color;\n    const arr = train.WAITING_TIME === \"Arriving\";\n    const sched = train.WAITING_TIME !== \"Arriving\";\n    const direction = color === \"GREEN\" || color === \"BLUE\";\n    const north = train.DIRECTION === \"N\";\n    const south = train.DIRECTION === \"S\";\n    const west = train.DIRECTION === \"W\";\n    const east = train.DIRECTION === \"E\";\n    const currStation = train.STATION === station;\n    if (isArr) {\n      return arr;\n    } else if (isSched) {\n      return sched;\n    } else if (isBound1 && direction) {\n      return east;\n    } else if (isBound2 && direction) {\n      return west;\n    } else if (isBound1 && !direction) {\n      return north;\n    } else if (isBound2 && !direction) {\n      return south;\n    } else {\n      return currColor;\n    }\n  });\n  if (filtered.length == 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"noTrains\",\n      children: \"No trains at this time...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allTrains\",\n      children: filtered === null || filtered === void 0 ? void 0 : filtered.map(train => /*#__PURE__*/_jsxDEV(Train, {\n        trainData: train\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 70\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n}\n_c = TrainList;\nvar _c;\n$RefreshReg$(_c, \"TrainList\");","map":{"version":3,"names":["React","useState","Train","jsxDEV","_jsxDEV","TrainList","props","data","color","station","isArr","isSched","isBound1","isBound2","filtered","filter","train","currColor","LINE","arr","WAITING_TIME","sched","direction","north","DIRECTION","south","west","east","currStation","STATION","length","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","trainData","_c","$RefreshReg$"],"sources":["/Users/ammu/Desktop/bootcamp-f23-amrithapramod/exer6/marta-interface-2/src/components/TrainList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Train from '../components/Train';\nimport \"./TrainList.css\";\n\nexport default function TrainList(props) {\n    const { data, color, station, isArr, isSched, isBound1, isBound2 } = props;\n    const filtered = data.filter((train) => {\n        const currColor = train.LINE === color;\n        const arr = train.WAITING_TIME === \"Arriving\";\n        const sched = train.WAITING_TIME !== \"Arriving\";\n        const direction = (color === \"GREEN\" || color === \"BLUE\");\n        const north = train.DIRECTION === \"N\";\n        const south = train.DIRECTION === \"S\";\n        const west = train.DIRECTION === \"W\";\n        const east = train.DIRECTION === \"E\";\n        const currStation = train.STATION === station;\n\n        \n\n        if (isArr) {\n            return arr;\n        } else if (isSched) {\n            return sched;\n        } else if (isBound1 && direction) {\n            return east;\n        } else if (isBound2 && direction) {\n            return west;\n        } else if (isBound1 && !direction) {\n            return north;\n        } else if (isBound2 && !direction) {\n            return south;\n        } else {\n            return currColor;\n        }\n      });\n    \n    if (filtered.length == 0) {\n        return <div id=\"noTrains\">No trains at this time...</div>\n    } else {\n        return <div className=\"allTrains\">{filtered?.map((train) => (<Train trainData={train} />))}</div>\n    }\n    \n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EACrC,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC,OAAO;IAAEC,KAAK;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGP,KAAK;EAC1E,MAAMQ,QAAQ,GAAGP,IAAI,CAACQ,MAAM,CAAEC,KAAK,IAAK;IACpC,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI,KAAKV,KAAK;IACtC,MAAMW,GAAG,GAAGH,KAAK,CAACI,YAAY,KAAK,UAAU;IAC7C,MAAMC,KAAK,GAAGL,KAAK,CAACI,YAAY,KAAK,UAAU;IAC/C,MAAME,SAAS,GAAId,KAAK,KAAK,OAAO,IAAIA,KAAK,KAAK,MAAO;IACzD,MAAMe,KAAK,GAAGP,KAAK,CAACQ,SAAS,KAAK,GAAG;IACrC,MAAMC,KAAK,GAAGT,KAAK,CAACQ,SAAS,KAAK,GAAG;IACrC,MAAME,IAAI,GAAGV,KAAK,CAACQ,SAAS,KAAK,GAAG;IACpC,MAAMG,IAAI,GAAGX,KAAK,CAACQ,SAAS,KAAK,GAAG;IACpC,MAAMI,WAAW,GAAGZ,KAAK,CAACa,OAAO,KAAKpB,OAAO;IAI7C,IAAIC,KAAK,EAAE;MACP,OAAOS,GAAG;IACd,CAAC,MAAM,IAAIR,OAAO,EAAE;MAChB,OAAOU,KAAK;IAChB,CAAC,MAAM,IAAIT,QAAQ,IAAIU,SAAS,EAAE;MAC9B,OAAOK,IAAI;IACf,CAAC,MAAM,IAAId,QAAQ,IAAIS,SAAS,EAAE;MAC9B,OAAOI,IAAI;IACf,CAAC,MAAM,IAAId,QAAQ,IAAI,CAACU,SAAS,EAAE;MAC/B,OAAOC,KAAK;IAChB,CAAC,MAAM,IAAIV,QAAQ,IAAI,CAACS,SAAS,EAAE;MAC/B,OAAOG,KAAK;IAChB,CAAC,MAAM;MACH,OAAOR,SAAS;IACpB;EACF,CAAC,CAAC;EAEJ,IAAIH,QAAQ,CAACgB,MAAM,IAAI,CAAC,EAAE;IACtB,oBAAO1B,OAAA;MAAK2B,EAAE,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7D,CAAC,MAAM;IACH,oBAAOhC,OAAA;MAAKiC,SAAS,EAAC,WAAW;MAAAL,QAAA,EAAElB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEwB,GAAG,CAAEtB,KAAK,iBAAMZ,OAAA,CAACF,KAAK;QAACqC,SAAS,EAAEvB;MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACrG;AAEJ;AAACI,EAAA,GAtCuBnC,SAAS;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}